
package com.module.contacts;

import java.util.ArrayList;
import java.util.List;

import com.android.uiautomator.core.UiObject;
import com.android.uiautomator.core.UiObjectNotFoundException;
import com.android.uiautomator.core.UiSelector;
import com.module.common.CommonModule;
import com.sonyericsson.test.acceptancetest.AcceptanceTestCase;
import com.utils.CommandConstantsUtils;

import android.content.ContentProviderOperation;
import android.content.ContentResolver;
import android.content.OperationApplicationException;
import android.graphics.Rect;
import android.net.Uri;
import android.os.RemoteException;
import android.provider.ContactsContract;
import android.util.Log;
import android.view.KeyEvent;

public class ContactsModule implements IContacts {

    AcceptanceTestCase testCase;

    CommonModule commonModule;

    String TAG = "Reliability";

    public ContactsModule(AcceptanceTestCase testCase) {
        // TODO Auto-generated constructor stub
        this.testCase = testCase;

        commonModule = new CommonModule(testCase);
    }

    public void startPhonebook() throws UiObjectNotFoundException {
        testCase.launchApp("com.sonyericsson.android.socialphonebook",
                "com.sonyericsson.android.socialphonebook.LaunchActivity");
        if (commonModule.waitForText("Contacts Setup", 2000)) {
            commonModule.clickText("Done");
        }
        AcceptanceTestCase.assertTrue(
                "Launch phonebook failed.",
                commonModule.waitForDescription("Contacts", 5000)
                        || commonModule.waitForDescription("New contact", 5000));
    }

    public void addContacts(int count) throws UiObjectNotFoundException {

            for (int i = 0; i < count; i++) {
                startPhonebook();
                commonModule.clickDescription("New contact");
                if(testCase.isViewWithTextPresent("Select backup account")){
                	testCase.click("No backup");
                }
                if (commonModule.waitForText("Keep local", 2000)) {
                    commonModule.clickText("Keep local");
                }
                commonModule.waitForResourceId("com.sonyericsson.android.socialphonebook:id/photo",
                        2000);

                commonModule.clickText("First name");
                testCase.enterText("Contact " + i);

                // UiObject phone = new UiObject(new UiSelector().resourceId(
                // "com.sonyericsson.android.socialphonebook:id/editors").instance(2));
                UiObject phone = new UiObject(new UiSelector().text("Phone").instance(1));
                phone.click();
                testCase.enterText("0123456789");

                commonModule.clickText("Add new");
                testCase.enterText("9876543210");

                testCase.pressKey(KeyEvent.KEYCODE_BACK);

                // UiObject email = new UiObject(new UiSelector().resourceId(
                // "com.sonyericsson.android.socialphonebook:id/editors").instance(4));
                UiObject email = new UiObject(new UiSelector().text("Email").instance(1));
                email.click();
                testCase.enterText("aaa@gmail.com");
                testCase.pressKey(KeyEvent.KEYCODE_BACK);

                commonModule.clickText("Street");
                testCase.enterText("street");
                testCase.pressKey(KeyEvent.KEYCODE_BACK);

                commonModule.clickText("City");
                testCase.enterText("city");

                commonModule.clickText("Done");
                commonModule
                        .waitForResourceId(
                                "com.sonyericsson.android.socialphonebook:id/static_header_container",
                                2000);

                commonModule.backOutToHomeScreen();
            }

    }

    public void saveContactFromDialer(String contactNumber,String contactName) throws UiObjectNotFoundException {


        if (contactNumber.equals("")){
        	testCase.clickItemWithDescription("More options");
        	if (testCase.isViewWithTextPresent("Add to Contacts")){
        		AcceptanceTestCase.assertTrue("Don't have add to contacts function when there is no number in duaialer.",
                        true);
        	}
        }
        else{
        	commonModule.wait(2);

        	testCase.enterText(contactNumber);
        	testCase.clickItemWithDescription("More options");
        	testCase.click("Add to Contacts");

        	commonModule.wait(2);
        	commonModule.clickResourceId("com.sonyericsson.android.socialphonebook:id/addicon");

        	if(commonModule.waitForText("Keep local", 3)){
        	    commonModule.clickText("Keep local");
        	}
        	commonModule.waitForResourceId("com.sonyericsson.android.socialphonebook:id/photo",
                     2000);

            commonModule.clickText("First name");
            testCase.enterText(contactName);

            commonModule.clickText("Done");
            commonModule
                    .waitForResourceId(
                            "com.sonyericsson.android.socialphonebook:id/static_header_container",
                            2000);


        }
        commonModule.backOutToHomeScreen();

    }

    public void enterQuickContact() throws UiObjectNotFoundException {
        UiObject pic = new UiObject(new UiSelector().resourceId(
                "com.sonyericsson.android.socialphonebook:id/list_item_photo").instance(2));
        pic.click();

        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/quickcontact_header", 2000);
    }

    public void selectCallFromQuickContact() throws UiObjectNotFoundException{
        enterQuickContact();

        commonModule
                .clickResourceId("com.sonyericsson.android.socialphonebook:id/actions_view_container");
        AcceptanceTestCase.assertTrue("Select call Icon failed.",
                commonModule.waitForResourceId("com.android.incallui:id/endCallButton", 2000));

        commonModule.clickResourceId("com.android.incallui:id/endCallButton");
        commonModule.waitForDescription("New contact", 2000);
    }

    public void selectMessageFromQuickContact() throws UiObjectNotFoundException {
        enterQuickContact();

        commonModule
                .clickResourceId("com.sonyericsson.android.socialphonebook:id/secondary_action_button");
        AcceptanceTestCase.assertTrue("Select message failed.", commonModule.waitForResourceId(
                "com.sonyericsson.conversations:id/conversation_title_text", 2000));

        testCase.pressKey(KeyEvent.KEYCODE_BACK);
        commonModule.waitForDescription("New contact", 2000);
    }

    public void selectViewContactFormQuickContact() throws UiObjectNotFoundException{
        enterQuickContact();

        commonModule.clickDescription("Contact photo");
        AcceptanceTestCase.assertTrue(
                "Select view contact failed.",
                commonModule.waitForResourceId("android:id/home", 2000)
                        && commonModule.waitForDescription("Edit", 2000));

        testCase.pressKey(KeyEvent.KEYCODE_BACK);
        commonModule.waitForDescription("New contact", 2000);
    }

    public void tapEmailIconFormQuickContact() throws UiObjectNotFoundException{
        enterQuickContact();

        commonModule.clickDescription("Email");
        AcceptanceTestCase.assertTrue("Tap Email icon failed.",
                commonModule.waitForTextContains(".com", 2000));

        testCase.pressKey(KeyEvent.KEYCODE_BACK);
        commonModule.waitForDescription("New contact", 2000);
    }

    public void tapMapsIconFormQuickContact() throws UiObjectNotFoundException{
        enterQuickContact();
        commonModule.clickDescription("Maps");
        AcceptanceTestCase.assertTrue("Tap Maps icon failed.",
                commonModule.waitForText("Home", 2000));

        testCase.pressKey(KeyEvent.KEYCODE_BACK);
        commonModule.waitForDescription("New contact", 2000);
    }

    public void createContact(String number, String mail) throws UiObjectNotFoundException {
        startPhonebook();
        commonModule.clickDescription("New contact");
        if (commonModule.waitForText("Keep local", 2000)) {
            commonModule.clickText("Keep local");
        }
        commonModule.waitForResourceId("com.sonyericsson.android.socialphonebook:id/photo", 2000);

        commonModule.clickText("First name");
        testCase.enterText("Aaa");

        commonModule.clickText("Last name");
        testCase.enterText("Bbb");

        UiObject phone = new UiObject(new UiSelector().text("Phone").instance(1));
        phone.click();
        testCase.enterText(number);
        testCase.pressKey(KeyEvent.KEYCODE_BACK);

        UiObject email = new UiObject(new UiSelector().text("Email").instance(1));
        email.click();
        testCase.enterText(mail);
        testCase.pressKey(KeyEvent.KEYCODE_BACK);


        commonModule.clickText("Street");
        testCase.enterText("Chaoyang");
        testCase.pressKey(KeyEvent.KEYCODE_BACK);

        commonModule.clickText("City");
        testCase.enterText("Beijing");
        testCase.pressKey(KeyEvent.KEYCODE_BACK);

        commonModule.clickText("State");
        testCase.enterText("China");
        testCase.pressKey(KeyEvent.KEYCODE_BACK);

        commonModule.clickText("Zip code");
        testCase.enterText("100000");

        commonModule.scrollToBegin();
        takePictureForContactPicture();

        commonModule.clickText("Done");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/static_header_container", 2000);

        commonModule.backOutToHomeScreen();
    }

    public void changeNumberTypeAndCheck(String callNumber, String numberType) throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.clickText("Aaa Bbb");
        commonModule.waitForDescription("Edit", 2000);

        commonModule.clickDescription("Edit");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/add_contact_spinner", 2000);

        commonModule
                .clickResourceId("com.sonyericsson.android.socialphonebook:id/add_contact_spinner");
        commonModule.waitForText(numberType, 2000);

        commonModule.clickText(numberType);
        if (commonModule.isTextExists("Custom field name")) {
            testCase.enterText("Custom");
            commonModule.clickText("OK");
        }
        commonModule.waitForText("Done", 2000);

        commonModule.clickText("Done");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/static_header_container", 2000);

        commonModule
                .clickResourceId("com.sonyericsson.android.socialphonebook:id/primary_action_left_icon");
        AcceptanceTestCase.assertTrue(
                "Name or number not show on outgoing call screen.",
                commonModule.waitForText("Aaa Bbb", 3000));
        //end call
        testCase.getUiDevice().pressKeyCode(KeyEvent.KEYCODE_ENDCALL);
        //commonModule.clickResourceId("com.android.incallui:id/endCallButton");
        commonModule.waitForResourceId("android:id/home", 3000);

        commonModule.clickResourceId("android:id/home");
        commonModule.waitForDescription("Call", 2000);

        commonModule.clickDescription("Call");
        AcceptanceTestCase.assertTrue(
                "Name/number/number type not record in call list.",
                commonModule.waitForText(numberType, 3000)
                        && commonModule.waitForText("Aaa Bbb", 3000)
                        && commonModule.waitForText(callNumber, 3000));

        commonModule.backOutToHomeScreen();
    }

    public void checkAllNumberType(String callNumber) throws UiObjectNotFoundException {
        changeNumberTypeAndCheck(callNumber, "Mobile");
        changeNumberTypeAndCheck(callNumber, "Home");
        changeNumberTypeAndCheck(callNumber, "Work");
        changeNumberTypeAndCheck(callNumber, "Main");
        changeNumberTypeAndCheck(callNumber, "Work Fax");
        changeNumberTypeAndCheck(callNumber, "Home Fax");
        changeNumberTypeAndCheck(callNumber, "Pager");
        changeNumberTypeAndCheck(callNumber, "Other");
        changeNumberTypeAndCheck(callNumber, "Custom");
    }

    public void removeAllFieldsInfoExceptName() throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.clickText("Aaa Bbb");
        commonModule.waitForDescription("Edit", 2000);

        commonModule.clickDescription("Edit");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/add_contact_spinner", 2000);

        commonModule.clickDescription("Contact photo");
        commonModule.waitForText("Remove photo", 2000);

        commonModule.clickText("Remove photo");
        commonModule.wait(1);

        commonModule.clickResourceIdByInstance(
                "com.sonyericsson.android.socialphonebook:id/delete_button", 0);

        commonModule.clickResourceIdByInstance(
                "com.sonyericsson.android.socialphonebook:id/delete_button", 1);

        commonModule.scrollToEnd();

        commonModule.emptyEditor(1);
        commonModule.clickResourceIdByInstance(
                "com.sonyericsson.android.socialphonebook:id/delete_button", 1);

        commonModule.clickText("Done");
        AcceptanceTestCase.assertTrue("Contact not only name display.", commonModule.waitForText(
                "No contact info. Tap edit icon on action bar to add info.", 2000));

        commonModule.backOutToHomeScreen();
    }

    public void saveNumberFormCallLog(String callNumber) throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.clickDescription("Call");
        commonModule.wait(2);
        AcceptanceTestCase.assertTrue("The unsaved number not show.",
                !commonModule.isTextExists("Aaa Bbb") && commonModule.isTextContains(callNumber));

        commonModule.clickResourceId("com.sonyericsson.android.socialphonebook:id/detail_icon");
        commonModule.waitForText("Add to Contacts", 2000);

        commonModule.clickText("Add to Contacts");
        commonModule.waitForText("Aaa Bbb", 2000);

        commonModule.clickText("Aaa Bbb");
        commonModule.waitForText("Done", 2000);

        commonModule.clickText("Done");
        commonModule.waitForText("Call details", 2000);

        testCase.pressKey(KeyEvent.KEYCODE_BACK);
        AcceptanceTestCase.assertTrue(
                "The unsaved number not show.",
                commonModule.waitForText(callNumber, 2000)
                        && commonModule.waitForText("Aaa Bbb", 2000));

        commonModule.backOutToHomeScreen();
    }

    public void deleteContacts() throws UiObjectNotFoundException {
        startPhonebook();

        if (!commonModule.isTextExists("No contacts")) {
            commonModule.pressMoreOption();
            commonModule.waitForText("Mark several", 2000);

            commonModule.clickText("Mark several");
            commonModule.waitForText("0 selected", 2000);

            commonModule.clickText("0 selected");
            commonModule.waitForText("Mark all", 2000);

            commonModule.clickText("Mark all");
            commonModule.waitForDescription("Delete", 2000);

            commonModule.clickDescription("Delete");
            commonModule.waitForText("Delete", 2000);

            commonModule.clickText("Delete");
            commonModule.waitForText("Cannot delete following contacts:", 2000);

            commonModule.clickText("OK");
        }
        AcceptanceTestCase.assertTrue("Delete contacts failed.",
                commonModule.waitForText("No contacts", 10*1000));

        commonModule.backOutToHomeScreen();
    }

    public void sendSMSToAllValidNumber(String contactName) throws UiObjectNotFoundException{
        startPhonebook();
        commonModule.waitForText(contactName, 2000);

        commonModule.clickText(contactName);
        commonModule.waitForDescription("Text message", 2000);

        commonModule.clickDescription("Text message");
        commonModule.waitForText("Write message", 2000);

        commonModule.clickText("Write message");
        testCase.enterText("This is for RT case.");

        commonModule.clickText("Send");// send message.
    }

    public void searchByContactName() throws UiObjectNotFoundException{
        startPhonebook();

        commonModule.clickResourceId("com.sonyericsson.android.socialphonebook:id/menu_search");
        commonModule.waitForResourceId("android:id/search_plate", 2000);

        testCase.enterText("Contact");
        AcceptanceTestCase.assertTrue("Search by contact name failed.", commonModule
                .waitForResourceId("com.sonyericsson.android.socialphonebook:id/list_item", 2000));

        commonModule.backOutToHomeScreen();
    }

    public void searchByPhoneNumber() throws UiObjectNotFoundException{
        startPhonebook();

        commonModule.clickResourceId("com.sonyericsson.android.socialphonebook:id/menu_search");
        commonModule.waitForResourceId("android:id/search_plate", 2000);

        testCase.enterText("0123456789");
        AcceptanceTestCase.assertTrue("Search by phone number failed.", commonModule
                .waitForResourceId("com.sonyericsson.android.socialphonebook:id/list_item", 2000));

        commonModule.backOutToHomeScreen();
    }

    public void searchByOtherCharacters() throws UiObjectNotFoundException{
        startPhonebook();

        commonModule.clickResourceId("com.sonyericsson.android.socialphonebook:id/menu_search");
        commonModule.waitForResourceId("android:id/search_plate", 2000);

        testCase.enterText("Jack");
        AcceptanceTestCase.assertTrue("Search by other characters failed.",
                commonModule.waitForText("No matching contacts found", 2000));

        commonModule.backOutToHomeScreen();
    }

    public void takePictureForContactPicture() throws UiObjectNotFoundException {
        commonModule.clickDescription("Contact photo");

        if (commonModule.waitForText("Take photo", 2000)) {
            commonModule.clickText("Take photo");
        } else if (commonModule.waitForText("Take new photo", 2000)) {
            commonModule.clickText("Take new photo");
        }

        if (commonModule.waitForText("Camera", 2000)) {
            commonModule.clickText("Camera");
            if (commonModule.isTextExists("Just once")) {
                commonModule.clickText("Just once");
            }
        }
        commonModule.wait(2);

        if (commonModule.isDescriptionExists("Double tap to switch to front camera")) {
            commonModule.clickDescription("Double tap to switch to front camera");
            commonModule.wait(2);
        }

        commonModule.clickDescription("Camera key");

        if (commonModule.waitForText("Crop picture", 2000)) {
            commonModule.clickText("Crop picture");
            if (commonModule.isTextExists("Just once")) {
                commonModule.clickText("Just once");
            }
            commonModule.wait(5);

            commonModule.clickResourceId("com.sonyericsson.photoeditor:id/save");
        }
    }

    public void setContactPicture() throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.clickText("Contact 0");
        commonModule.waitForDescription("Edit", 2000);

        commonModule.clickDescription("Edit");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/add_contact_spinner", 2000);

        takePictureForContactPicture();

        commonModule.clickText("Done");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/static_header_container", 2000);

        commonModule.backOutToHomeScreen();
    }

    public void changeContactPicture() throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.clickText("Aaa Bbb");
        commonModule.waitForDescription("Edit", 2000);

        commonModule.clickDescription("Edit");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/add_contact_spinner", 2000);

        takePictureForContactPicture();

        commonModule.clickText("Done");
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/static_header_container", 2000);

        commonModule.backOutToHomeScreen();
    }

    public void exportContacts(String storage) {
        testCase.clickItemWithDescription("More options");
        testCase.click("Export contacts");
        testCase.click(storage);
        if (storage.equalsIgnoreCase("SIM card")) {
            commonModule.wait(2);
            testCase.click("Mark all");
            testCase.click("Export");
            if (testCase.isViewWithIdPresent("select_dialog_listview")) {
                testCase.click("Add contacts");
            }
        } else if (storage.equalsIgnoreCase("Internal storage")) {
            commonModule.wait(2);
            testCase.clickId("button1");
        } else if (storage == "SD card") {
            commonModule.wait(2);
            testCase.clickId("button1");
        } else if (storage.equalsIgnoreCase("USB storage")) {

        }
        AcceptanceTestCase.assertTrue("Export contacts failed",
                commonModule.waitForTextGone("Exporting contacts", 300 * 1000));

    }

    public void createContactsURI(String name, String number) throws Exception {
        Uri uri = Uri.parse("content://com.android.contacts/raw_contacts");
        ContentResolver resolver = testCase.getInstrumentation().getContext().getContentResolver();
        ArrayList<ContentProviderOperation> operations = new ArrayList<ContentProviderOperation>();
        ContentProviderOperation op1 = ContentProviderOperation.newInsert(uri)
                .withValue("account_name", null).build();
        operations.add(op1);

        uri = Uri.parse("content://com.android.contacts/data");
        ContentProviderOperation op2 = ContentProviderOperation.newInsert(uri)
            .withValueBackReference("raw_contact_id", 0)
            .withValue("mimetype", "vnd.android.cursor.item/name")
            .withValue("data2", name)
            .build();
        operations.add(op2);

        ContentProviderOperation op3 = ContentProviderOperation.newInsert(uri)
            .withValueBackReference("raw_contact_id", 0)
            .withValue("mimetype", "vnd.android.cursor.item/phone_v2")
            .withValue("data1", number)
            .withValue("data2", "2")
            .build();
        operations.add(op3);

        ContentProviderOperation op4 = ContentProviderOperation.newInsert(uri)
        .withValueBackReference("raw_contact_id", 0)
        .withValue("mimetype", "vnd.android.cursor.item/email_v2")
        .withValue("data1", "asdfasfad@163.com")
        .withValue("data2", "2")
        .build();
        operations.add(op4);

        resolver.applyBatch("com.android.contacts", operations);
    }

    public void importContacts(String storage) {
        openPhonebooksetting("Import contacts");
        testCase.click(storage);
        if (testCase.isViewWithTextPresent("Local contact")) {
            testCase.click("Local contact");
        }

        commonModule.wait(2);
        if (storage.equalsIgnoreCase("SIM card")) {
            if (testCase.isViewWithTextPresent("Import all")) {
                testCase.click("Import all");
            }
        } else if (storage.equalsIgnoreCase("Internal storage")) {
            if (commonModule.waitForText("Select vCard file", 120 * 1000)) {
                testCase.clickItemWithId("text1", 0);
                testCase.click("OK");
            } else {
                AcceptanceTestCase
                        .assertTrue("There are no vcard exist on Internal storage", false);
            }

        } else if (storage.equalsIgnoreCase("SD card")) {
            if (commonModule.waitForText("Select vCard file", 120 * 1000)) {
                testCase.clickItemWithId("text1", 0);
                testCase.click("OK");
            } else {
                AcceptanceTestCase
                        .assertTrue("There are no vcard exist on Internal storage", false);
            }

        } else if (storage.equalsIgnoreCase("USB storage")) {

        }
        AcceptanceTestCase.assertTrue("Import contacts failed",
                commonModule.waitForTextGone("Import all", 300 * 1000));

    }

    public void openPhonebooksetting(String setting) {
        commonModule.wait(2);
        testCase.pressKey(KeyEvent.KEYCODE_MENU);
        testCase.click(setting);
    }

    public void addAccount(String googleAccount, String password){
    	openPhonebooksetting("Add account");
    	commonModule.wait(2);
    	testCase.click("Google");
    	testCase.click("Existing");
    	if(testCase.isViewWithTextPresent("Sign in")){
    		testCase.clickId("username_edit");
    		testCase.enterText(googleAccount);
    		testCase.clickId("password_edit");
    		testCase.enterText(password);
    		testCase.clickId("next_button");
    		if(testCase.isViewWithTextPresent("OK")){
    			testCase.click("OK");
    		}
    		if(testCase.isViewWithTextPresent("Couldn't sign in")){
    			AcceptanceTestCase.assertTrue(false);
    		}else{
    			boolean skipButton =	commonModule.waitForId("skip_button", 30*1000);
				  if(skipButton){
					  testCase.clickId("skip_button");
				  }
    		  boolean nextButton =	commonModule.waitForId("next_button", 10*1000);
				  if(nextButton){
					  testCase.clickId("next_button");
					  testCase.clickId("next_button");
				  }
				  AcceptanceTestCase.assertTrue("Add google account failed", commonModule.waitForDescription("More options", 5000));
    		}
    	}
	}

    public void markSeveral(String partnerNumber) {
        // Delete contact
        openPhonebooksetting("Mark several");
        commonModule.wait(2);
        if (testCase.isViewWithIdPresent("list_item")) {
            testCase.clickItemWithId("list_item", 2);
            testCase.clickId("markmode_option_delete");
            testCase.clickId("button1");
        } else {
            Log.w(TAG, "The are no contacts exist in phonebook");
        }

        // Favorite contact
        openPhonebooksetting("Mark several");
        commonModule.wait(2);
        if (testCase.isViewWithIdPresent("list_item")) {
            testCase.clickItemWithId("list_item", 2);
            testCase.clickId("markmode_option_favorites");
        } else {
            Log.w(TAG, "The are no contacts exist in phonebook");
        }

        // Share contact
        openPhonebooksetting("Mark several");
        commonModule.wait(2);
        if (testCase.isViewWithIdPresent("list_item")) {
            testCase.clickItemWithId("list_item", 2);
            testCase.clickItemWithDescription("Share with");
            testCase.click("See all");
            if (testCase.isViewWithTextPresent("Messaging")) {
                testCase.click("Messaging");
            } else {
                testCase.pressKey(KeyEvent.KEYCODE_BACK);
                testCase.clickId("default_activity_button");
            }
            commonModule.waitForId("recipients_editor", 10 * 1000);
            testCase.clickId("recipients_editor");
            testCase.enterText(partnerNumber);
            testCase.click("Send");
        } else {
            Log.w(TAG, "The are no contacts exist in phonebook");
        }
    }

    public void filterContact() {
        openPhonebooksetting("Filter");
        commonModule.wait(2);
        testCase.click("Contacts with phone numbers");

        testCase.click("Sort list by");
        testCase.click("Last name");

        testCase.click("View contacts as");
        testCase.click("Last name first");

        testCase.click("Local contact");
        testCase.click("Colleagues");
        testCase.click("Family");
        testCase.click("Friends");
        testCase.click("All other contacts");

        testCase.click("Done");

    }

    public void findLinkCandidates(){
		    	openPhonebooksetting("Find link candidates");
		    	commonModule.wait(2);
		    	boolean linkContact = commonModule.waitForText("Link contacts suggestion", 30*1000);
		    	if(linkContact){
		    		commonModule.scrollFindId("link_icon");
		    		testCase.click("Done");
		    	}
		    	if(testCase.isViewWithIdPresent("button1")){
		    		testCase.clickId("button1");
		    	}
		}
    public void speedDialNumber(){
		    	openPhonebooksetting("Settings");
		    	commonModule.wait(2);
	}

    public void addContactWithNumberWithoutName(String number) throws UiObjectNotFoundException {
        startPhonebook();
        commonModule.clickDescription("New contact");
        if (testCase.isViewWithTextPresent("Select backup account")) {
            testCase.click("No backup");
        }
        if (commonModule.waitForText("Keep local", 2000)) {
            commonModule.clickText("Keep local");
        }
        UiObject phone = new UiObject(new UiSelector().text("Phone").instance(1));
        phone.click();
        testCase.enterText(number);
        commonModule.clickText("Done");
        if (commonModule.waitForText("Link contacts suggestion", 3000)) {
            commonModule.clickText("Cancel");
        }
        commonModule.waitForResourceId(
                "com.sonyericsson.android.socialphonebook:id/static_header_container", 2000);

        commonModule.backOutToHomeScreen();
    }

    public void addAllContactsToFavorite(String ...names) throws UiObjectNotFoundException {
        int i = 0;
        for (String name : names) {
            startPhonebook();
            commonModule.scrollFindTextNotClick(name);

            UiObject actBar = new UiObject(new UiSelector().resourceId("android:id/split_action_bar"));
            Rect aRect = actBar.getVisibleBounds();
            UiObject contact = new UiObject(new UiSelector().text(name));
            Rect cRect = contact.getVisibleBounds();
            if (cRect.bottom >= aRect.top) {
                testCase.scrollDown();
            }

            testCase.longPressItemWithText(name);
            commonModule.waitForDescription("Add favorite", 2000);
//            AcceptanceTestCase.assertTrue("cRect.bottom=" + cRect.bottom + ", aRect.top="
//                    + aRect.top, commonModule.waitForDescription("Add favorite", 2000));

            commonModule.clickDescription("Add favorite");
            commonModule.wait(3);

            commonModule.clickDescription("Favorites");
            i = i + 1;
            int j = commonModule.getResourceIdCount(
                    "com.sonyericsson.android.socialphonebook:id/favorites_pane_view");
            AcceptanceTestCase.assertTrue(
                    "Add " + name + " to favorite contacts" + j, i == j);
//            AcceptanceTestCase.assertTrue(
//                    "Add " + i + "favorite contacts, but only success " + j, i == j);

            commonModule.backOutToHomeScreen();
        }
    }

    public void addContactToFavorite(String name) throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.scrollFindTextNotClick(name);

        UiObject actBar = new UiObject(new UiSelector().resourceId("android:id/split_action_bar"));
        Rect aRect = actBar.getVisibleBounds();
        UiObject contact = new UiObject(new UiSelector().text(name));
        Rect cRect = contact.getVisibleBounds();
        if (cRect.bottom >= aRect.top) {
            testCase.scrollDown();
        }

        testCase.longPressItemWithText(name);
        commonModule.waitForDescription("Add favorite", 2000);

        commonModule.clickDescription("Add favorite");
        commonModule.wait(3);

        commonModule.clickDescription("Favorites");
    }

    public void deleteFavoriteContact(String contact) throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.clickDescription("Favorites");
        commonModule.waitForText(contact, 2000);

        commonModule.clickText(contact);
        commonModule.waitForDescription("Add to Favorites", 2000);

        commonModule.clickDescription("Add to Favorites");
        commonModule.wait(2);

        for (int i = 0; i < 3; i++) {
            if (!commonModule.isDescriptionContains("Add to Favorites")) {
                break;
            }
            testCase.pressKey(KeyEvent.KEYCODE_BACK);
            commonModule.wait(2);
        }

        AcceptanceTestCase.assertTrue("Delete favorite contact failed.",
                !commonModule.waitForText(contact, 3000));
    }

    public void sendEmailToContact(String contact) throws UiObjectNotFoundException {
        startPhonebook();

        commonModule.clickText(contact);
        commonModule.waitForTextContains(".com", 2000);

        commonModule.clickTextContains(".com");
        if (commonModule.waitForText("Complete action using", 2000)) {
            commonModule.clickText("Email");
            if (commonModule.isTextExists("Just once")) {
                commonModule.clickText("Just once");
            }
        }
        AcceptanceTestCase.assertTrue("Select email failed.",
                commonModule.waitForResourceId("com.android.email:id/send", 3000));

        commonModule.clickText("Subject");
        testCase.enterText("RT test");

        commonModule.clickResourceId("com.android.email:id/message_content");
        testCase.enterText("This is for RT test !");

        commonModule.clickResourceId("com.android.email:id/send");
        AcceptanceTestCase.assertTrue("Send email to contact failed.",
                commonModule.waitForDescription("Edit", 5 * 1000));
    }

    public void editContactNumber(String contact, String oldNumber, String newNumber) throws UiObjectNotFoundException{
    			commonModule.scrollFindText(contact);
    			commonModule.clickDescription("Edit");
    			commonModule.wait(2);
    			commonModule.clickText(oldNumber);
    			commonModule.clickResourceId("com.sonyericsson.android.socialphonebook:id/delete_button");
    			testCase.enterText(newNumber);
    			commonModule.wait(2);
    			commonModule.clickText("Done");
    }

    public void callContactInContactDetail(String contact, String phoneNumber) throws UiObjectNotFoundException{
    		commonModule.wait(2);
				AcceptanceTestCase.assertTrue("Contact detail should be opened", commonModule.isTextExists(contact));
				String formatNumber = phoneNumber.substring(0,3)+"‪ "+phoneNumber.substring(3,phoneNumber.length());
				Log.i(TAG,formatNumber);
				commonModule.wait(2);
				//commonModule.clickText(formatNumber);
				commonModule.clickResourceId("com.sonyericsson.android.socialphonebook:id/data");
				AcceptanceTestCase.assertTrue("Calling state is shown", commonModule.waitForResourceId("com.android.incallui:id/full_incallscreen", 10000));
	}
}