package com.module.calendar;

import junit.framework.Assert;

import com.module.common.CommonModule;
import com.sonyericsson.test.acceptancetest.AcceptanceTestCase;

import android.content.ContentResolver;
import android.content.ContentValues;
import android.hardware.Camera.CameraInfo;
import android.hardware.Camera;
import android.net.Uri;
import android.util.Log;
import android.view.KeyEvent;

public class CalendarModule implements ICalendar{
    AcceptanceTestCase testCase;

    CommonModule commonModule;
    
    String TAG = "Reliability";
    CameraInfo info = new Camera.CameraInfo();  
 
    public CalendarModule(AcceptanceTestCase testCase){
        this.testCase = testCase;
        this.commonModule = new CommonModule(testCase);
    }
    public void startCalendarFromMenu() {
    	commonModule.backOutToHomeScreen();
        testCase.launchApp("com.android.calendar", "com.android.calendar.LaunchActivity");
        testCase.waitForActivitySwitch();
    }

    protected void setTitleValue(String value) {
    	testCase.clickItemWithId("title");
    	testCase.enterText(value);
    	commonModule.wait(2);
    }

    protected void openNewEventView() {
        if (testCase.isViewWithIdPresent("action_create_event")) {
        	testCase.clickItemWithId("action_create_event");
        } else {
        	//commonModule.clickMenuItem("New event");
        }
    }

    public void addCalendarNewEvent(){
        openNewEventView();
        testCase.setTimeout(3000);
        if (!testCase.isViewWithIdPresent("what_label")
                && !testCase.isViewWithIdPresent("from_label")) {
        	testCase.resetTimeout();
        }
        testCase.resetTimeout();
        setTitleValue("Test");
        if (testCase.isInputMethodWindowOpened()) {
        	testCase.pressKey(KeyEvent.KEYCODE_BACK);
        	commonModule.wait(2);
        }

        testCase.clickItemWithId("start_date");
        commonModule.wait(2);
        testCase.click("Set");
        testCase.click("Done");

        for (int k = 0; k < 5; k++) {
        	testCase.scrollDown(1);
        }
        testCase.click("Save");
        testCase.click("Done");
        testCase.sleep(2000);
        testCase.setTimeout(2000);
        if (testCase.isViewWithIdPresent("day_names")
                || testCase.isViewWithIdPresent("action_today")) {
        	testCase.resetTimeout();
            Log.v(TAG, "Create event successfully!");
        } else {
        	testCase.resetTimeout();}
    }

    public void deleteAllTheEvent() {
    	testCase.pressKey(KeyEvent.KEYCODE_MENU);
    	commonModule.wait(2);
    	testCase.clickItemWithText("Settings");
    	testCase.click("General settings");
    	commonModule.scrollFindText("Slete all events");
    	testCase.setTimeout(2000);
        if (testCase.isViewWithTextPresent("OK")) {
        	testCase.clickItemWithText("OK");
        } else if (testCase.isViewWithIdPresent("button1")) {
        	testCase.clickItemWithId("button1");
        } else {
            Log.v(TAG, "there is no event any more");
        }
        testCase.resetTimeout();
        testCase.assertTextPresent("Delete all events");
    }
	@Override
	public void addNewCalendarEventAPI(long startTimeInMilli, String strTaskName,
			String strDescription, String value, boolean needReminder) {

		ContentResolver cr = testCase.getInstrumentation().getContext()
				.getContentResolver();
		long endTimeInMilli = startTimeInMilli + 1000 * 60 * 60; // For next 1hr
		ContentValues values = new ContentValues();
		values.put("calendar_id", 1);
		values.put("dtstart", startTimeInMilli);
		values.put("dtend", endTimeInMilli);
		values.put("title", strTaskName);
		values.put("description", strDescription);
		values.put("eventTimezone", value);
		Uri EVENTS_URI = Uri.parse("content://com.android.calendar/events");
		Uri uri = cr.insert(EVENTS_URI, values);
		long eventID = Long.parseLong(uri.getLastPathSegment());
		if (needReminder) {
			Log.d(TAG, "Add reminder for event");
			String reminderUriString = "content://com.android.calendar/reminders";

			ContentValues reminderValues = new ContentValues();

			reminderValues.put("event_id", eventID);
			reminderValues.put("minutes", 10);
			reminderValues.put("method", 1); // Alert Methods:
												// Default(0),Alert(1),
												// Email(2),SMS(3)

			Uri reminderUri = cr.insert(Uri.parse(reminderUriString),
					reminderValues);
		}
		
	}
	@Override
	public boolean waitForCalendarAlarm(String title, int timeout) {
        long startTime = System.currentTimeMillis();

        while(System.currentTimeMillis() - startTime < timeout){
        	testCase.openStatusBar();
            if(testCase.isViewWithTextPresent(title)){
            	testCase.click("Clear");
            	 return true;
            	
            }else
            	commonModule.wait(5);
        }
		return false;
	}

}
